{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nconst currentTime = new Date();\nconst userInput = document.querySelector('#datetime-picker');\nlet UserSelectedDate = null;\nconst startBtn = document.querySelector('.js-btn')\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < currentTime) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n      })\n      startBtn.disabled = true;\n    } else {\n      UserSelectedDate = selectedDates[0];\n    \n      console.log(UserSelectedDate);\n      startBtn.disabled = false; \n    }\n  },\n};\nflatpickr(userInput, options);\n\n\n\n\nconst elements = {\n  days: document.querySelector(\".js-days\"),\n  hours: document.querySelector(\".js-hours\"),\n  minutes: document.querySelector(\".js-minutes\"),\n  seconds: document.querySelector(\".js-seconds\")\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\n\nsetInterval(() => {\n  if (UserSelectedDate) {\n    const currentTime = new Date();\n    const difference = UserSelectedDate - currentTime;\n  \n    if (difference <= 0) {\n      elements.days.textContent = '00';\n      elements.hours.textContent = '00';\n      elements.minutes.textContent = '00';\n      elements.seconds.textContent = '00';\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(difference);\n\n    elements.days.textContent = String(days).padStart(2,'0');\n    elements.hours.textContent = String(hours).padStart(2, '0');\n    elements.minutes.textContent = String(minutes).padStart(2, '0');\n    elements.seconds.textContent = String(seconds).padStart(2, '0');\n\n  }\n}, 1000)\n"],"names":["currentTime","userInput","UserSelectedDate","startBtn","options","selectedDates","iziToast","flatpickr","elements","convertMs","ms","days","hours","minutes","seconds","difference"],"mappings":"2FAaA,MAAMA,EAAc,IAAI,KAClBC,EAAY,SAAS,cAAc,kBAAkB,EAC3D,IAAIC,EAAmB,KACvB,MAAMC,EAAW,SAAS,cAAc,SAAS,EAE3CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAIL,GACrBM,EAAS,MAAM,CACb,QAAS,oCACjB,CAAO,EACDH,EAAS,SAAW,KAEpBD,EAAmBG,EAAc,CAAC,EAElC,QAAQ,IAAIH,CAAgB,EAC5BC,EAAS,SAAW,GAEvB,CACH,EACAI,EAAUN,EAAWG,CAAO,EAK5B,MAAMI,EAAW,CACf,KAAM,SAAS,cAAc,UAAU,EACvC,MAAO,SAAS,cAAc,WAAW,EACzC,QAAS,SAAS,cAAc,aAAa,EAC7C,QAAS,SAAS,cAAc,aAAa,CAC/C,EACA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAKA,YAAY,IAAM,CAChB,GAAIZ,EAAkB,CAEpB,MAAMa,EAAab,EADC,IAAI,KAGxB,GAAIa,GAAc,EAAG,CACnBP,EAAS,KAAK,YAAc,KAC5BA,EAAS,MAAM,YAAc,KAC7BA,EAAS,QAAQ,YAAc,KAC/BA,EAAS,QAAQ,YAAc,KAC/B,MACD,CAED,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUM,CAAU,EAE9DP,EAAS,KAAK,YAAc,OAAOG,CAAI,EAAE,SAAS,EAAE,GAAG,EACvDH,EAAS,MAAM,YAAc,OAAOI,CAAK,EAAE,SAAS,EAAG,GAAG,EAC1DJ,EAAS,QAAQ,YAAc,OAAOK,CAAO,EAAE,SAAS,EAAG,GAAG,EAC9DL,EAAS,QAAQ,YAAc,OAAOM,CAAO,EAAE,SAAS,EAAG,GAAG,CAE/D,CACH,EAAG,GAAI"}